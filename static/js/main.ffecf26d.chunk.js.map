{"version":3,"sources":["assets/profile.png","assets/hoaxify.png","serviceWorker.js","i18n.js","components/Input.js","components/ButtonWithProgress.js","shared/ApiProgress.js","api/apiCalls.js","redux/authActions.js","redux/Constants.js","pages/UserSignupPage.js","pages/LoginPage.js","components/LanguageSelector.js","components/ProfileImageWithDefault.js","components/Modal.js","components/ProfileCard.js","components/Spinner.js","pages/UserPage.js","components/TopBar.js","container/App.js","redux/authReducer.js","redux/configureStore.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","i18n","use","initReactI18next","init","resources","en","translations","Username","Password","Login","Logout","Users","Next","Previous","Edit","Save","Cancel","aze","fallbackLng","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","register","number","index","Input","props","label","error","name","onChange","type","defaultValue","className","undefined","ButtonWithProgress","onClick","pendingApiCall","disabled","text","useApiProgress","apiMethod","apiPath","strictPath","useState","setPendingApiCall","useEffect","requestInterceptor","responseInterceptor","updateApiCallFor","method","url","inProgress","startsWith","axios","interceptors","request","response","config","eject","setAuthorizationHeader","isLoggedIn","token","authorizationHeaderValue","defaults","headers","getUser","username","get","updateUser","body","put","deleteUser","delete","logoutSuccess","dispatch","a","post","loginSuccess","authState","payload","loginHandler","credentials","creds","data","user","password","signupHandler","UserSignupPage","passwordRepeatError","displayName","passwordRepeat","form","setForm","errors","setErrors","useDispatch","event","target","value","previousErrors","previousForm","onClickSignup","preventDefault","history","push","validationErrors","t","useTranslation","usernameError","displayNameError","passwordError","pendingApiCallSignup","pendingApiCallLogin","LoginPage","setUsername","setPassword","setError","onClickLogin","message","buttonEnabled","action","LanguageSelector","onChangeLanguage","language","changeLanguage","alt","style","cursor","ProfileImageWithDefault","image","tempimage","imageSource","defaultPicture","src","onError","Modal","visible","onClickCancel","onClickOk","title","okButton","backgroundColor","ProfileCard","inEditMode","setInEditMode","updatedDisplayName","setUpdatedDisplayName","loggedInUsername","useSelector","store","pathUsername","useParams","setUser","editable","setEditable","newImage","setNewImage","setValidationErrors","modalVisible","setModalVisible","useHistory","previousValidationErrors","pendingApiCallDeleteUser","onClickSave","split","onClickDeleteUser","imageError","width","height","files","length","file","fileReader","FileReader","onloadend","result","readAsDataURL","Spinner","UserPage","notFound","setNotFound","loadUser","fontSize","TopBar","menuArea","useRef","menuVisible","setMenuVisible","document","addEventListener","menuClickTracker","removeEventListener","current","contains","links","to","dropDownClass","ref","App","path","component","defaultState","authReducer","state","secureLs","SecureLS","initialState","hoaxAuth","getStateFromStorage","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","subscribe","newState","getState","set","configureStore","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.ffecf26d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.926fda93.png\";","module.exports = __webpack_public_path__ + \"static/media/hoaxify.2dcb4821.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport { register } from 'timeago.js';\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources: {\r\n    en: {\r\n      translations: {\r\n        'Sign Up': 'Sign Up',\r\n        'Password mismatch': 'Password mismatch',\r\n        Username: 'Username',\r\n        'Display Name': 'Display Name',\r\n        Password: 'Password',\r\n        'Password Repeat': 'Password Repeat',\r\n        Login: 'Login',\r\n        Logout: 'Logout',\r\n        Users: 'Users',\r\n        Next: 'next >',\r\n        Previous: '< previous',\r\n        'Load Failure': 'Load Failure',\r\n        'User not found': 'User not found',\r\n        Edit: 'Edit',\r\n        'Change Display Name': 'Change Display Name',\r\n        Save: 'Save',\r\n        Cancel: 'Cancel',\r\n        'My Profile': 'My Profile',\r\n        'There are no hoaxes': 'There are no hoaxes',\r\n        'Load old hoaxes': 'Load old hoaxes',\r\n        'There are new hoaxes': 'There are new hoaxes',\r\n        'Delete Hoax': 'Delete Hoax',\r\n        'Are you sure to delete hoax?': 'Are you sure to delete hoax?',\r\n        'Delete My Account': 'Delete My Account',\r\n        'Are you sure to delete your account?': 'Are you sure to delete your account?'\r\n      }\r\n    },\r\n    aze: {\r\n      translations: {\r\n        'Teacher Portal': 'Müəllim Portalı',\r\n        'Sign Up': 'Qeydiyyatdan Keç',\r\n        'Password mismatch': 'Şifrələr Eyni Deyil',\r\n        Username: 'İstifadəçi Adı',\r\n        'Display Name': 'Login',\r\n        Password: 'Şifrə',\r\n        'Password Repeat': 'Şifrəyi Təkrarla',\r\n        Login: 'Daxil Ol',\r\n        Logout: 'Çıxış',\r\n        Users: 'İstifadəçilər',\r\n        Next: 'sonrakı >',\r\n        Previous: '< əvvəlki',\r\n        'Load Failure': 'Listələnmə uğursuz oldu',\r\n        'User not found': 'İstifadəçi tapılmadı',\r\n        Edit: 'Düzəliş et',\r\n        'Change Display Name': 'Logini dəyiş',\r\n        Save: 'Yadda Saxla',\r\n        Cancel: 'Ləğv Et',\r\n        'My Profile': 'Hesabım',\r\n        'There are no hoaxes': 'Hoax bulunamadı',\r\n        'Load old hoaxes': 'Geçmiş Hoaxları getir',\r\n        'There are new hoaxes': 'Yeni Hoaxlar var',\r\n        'Delete Hoax': `Hoax'u sil`,\r\n        'Are you sure to delete hoax?': `Hoax'u silmek istedğinizden emin misiniz?`,\r\n        'Delete My Account': 'Hesabımı Sil',\r\n        'Are you sure to delete your account?': 'Hesabınızı silmek istediğinizden emin misiniz?'\r\n      }\r\n    }\r\n  },\r\n  fallbackLng: 'en',\r\n  ns: ['translations'],\r\n  defaultNS: 'translations',\r\n  keySeparator: false,\r\n  interpolation: {\r\n    escapeValue: false,\r\n    formatSeparator: ','\r\n  },\r\n  react: {\r\n    wait: true\r\n  }\r\n});\r\n\r\nconst timeageTR = (number, index) => {\r\n  return [\r\n    ['az önce', 'şimdi'],\r\n    ['%s saniye önce', '%s saniye içinde'],\r\n    ['1 dakika önce', '1 dakika içinde'],\r\n    ['%s dakika önce', '%s dakika içinde'],\r\n    ['1 saat önce', '1 saat içinde'],\r\n    ['%s saat önce', '%s saat içinde'],\r\n    ['1 gün önce', '1 gün içinde'],\r\n    ['%s gün önce', '%s gün içinde'],\r\n    ['1 hafta önce', '1 hafta içinde'],\r\n    ['%s hafta önce', '%s hafta içinde'],\r\n    ['1 ay önce', '1 ay içinde'],\r\n    ['%s ay önce', '%s ay içinde'],\r\n    ['1 yıl önce', '1 yıl içinde'],\r\n    ['%s yıl önce', '%s yıl içinde']\r\n  ][index];\r\n};\r\nregister('tr', timeageTR);\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\n\r\nconst Input = props => {\r\n  const { label, error, name, onChange, type, defaultValue } = props;\r\n  let className = 'form-control';\r\n\r\n  if (type === 'file') {\r\n    className += '-file';\r\n  }\r\n\r\n  if (error !== undefined) {\r\n    className += ' is-invalid';\r\n  }\r\n\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label>{label}</label>\r\n      <input className={className} name={name} onChange={onChange} type={type} defaultValue={defaultValue} />\r\n      <div className=\"invalid-feedback\">{props.error}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\r\n\r\nconst ButtonWithProgress = props => {\r\n  const { onClick, pendingApiCall, disabled, text, className } = props;\r\n\r\n  return (\r\n    <button\r\n      className={className || \"btn-block btn btn-primary\"}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      {pendingApiCall && (\r\n        <span className=\"spinner-border spinner-border-sm\"></span>\r\n      )}{\" \"}\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ButtonWithProgress;\r\n","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath) => {\r\n  const [pendingApiCall, setPendingApiCall] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let requestInterceptor, responseInterceptor;\r\n\r\n    const updateApiCallFor = (method, url, inProgress) => {\r\n      if (method !== apiMethod) {\r\n        return;\r\n      }\r\n      if (strictPath && url === apiPath) {\r\n        setPendingApiCall(inProgress);\r\n      } else if (!strictPath && url.startsWith(apiPath)) {\r\n        setPendingApiCall(inProgress);\r\n      }\r\n    };\r\n\r\n    const registerInterceptors = () => {\r\n      requestInterceptor = axios.interceptors.request.use(request => {\r\n        const { url, method } = request;\r\n        updateApiCallFor(method, url, true);\r\n        return request;\r\n      });\r\n\r\n      responseInterceptor = axios.interceptors.response.use(\r\n        response => {\r\n          const { url, method } = response.config;\r\n          updateApiCallFor(method, url, false);\r\n          return response;\r\n        },\r\n        error => {\r\n          const { url, method } = error.config;\r\n          updateApiCallFor(method, url, false);\r\n          throw error;\r\n        }\r\n      );\r\n    };\r\n\r\n    const unregisterInterceptors = () => {\r\n      axios.interceptors.request.eject(requestInterceptor);\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n\r\n    registerInterceptors();\r\n\r\n    return function unmount() {\r\n      unregisterInterceptors();\r\n    };\r\n  }, [apiPath, apiMethod, strictPath]);\r\n\r\n  return pendingApiCall;\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const signup = body => {\r\n  return axios.post('/api/1.0/users', body);\r\n};\r\n\r\nexport const login = creds => {\r\n  return axios.post('/api/1.0/auth', creds);\r\n};\r\n\r\nexport const logout = () => {\r\n  return axios.post('/api/1.0/logout');\r\n}\r\n\r\nexport const changeLanguage = language => {\r\n  axios.defaults.headers['accept-language'] = language;\r\n};\r\n\r\nexport const getUsers = (page = 0, size = 3) => {\r\n  return axios.get(`/api/1.0/users?page=${page}&size=${size}`);\r\n};\r\n\r\nexport const setAuthorizationHeader = ({ isLoggedIn, token }) => {\r\n  if (isLoggedIn) {\r\n    const authorizationHeaderValue = `Bearer ${token}`;\r\n    axios.defaults.headers['Authorization'] = authorizationHeaderValue;\r\n  } else {\r\n    delete axios.defaults.headers['Authorization'];\r\n  }\r\n};\r\n\r\nexport const getUser = username => {\r\n  return axios.get(`/api/1.0/users/${username}`);\r\n};\r\n\r\nexport const updateUser = (username, body) => {\r\n  return axios.put(`/api/1.0/users/${username}`, body);\r\n};\r\n\r\nexport const postHoax = hoax => {\r\n  return axios.post('/api/1.0/hoaxes', hoax);\r\n};\r\n\r\nexport const getHoaxes = (username, page = 0) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes?page=` : '/api/1.0/hoaxes?page=';\r\n  return axios.get(path + page);\r\n};\r\n\r\nexport const getOldHoaxes = (id, username) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes/${id}` : `/api/1.0/hoaxes/${id}`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const getNewHoaxCount = (id, username) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes/${id}?count=true` : `/api/1.0/hoaxes/${id}?count=true`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const getNewHoaxes = (id, username) => {\r\n  const path = username ? `/api/1.0/users/${username}/hoaxes/${id}?direction=after` : `/api/1.0/hoaxes/${id}?direction=after`;\r\n  return axios.get(path);\r\n};\r\n\r\nexport const postHoaxAttachment = attachment => {\r\n  return axios.post('/api/1.0/hoax-attachments', attachment);\r\n};\r\n\r\nexport const deleteHoax = id => {\r\n  return axios.delete(`/api/1.0/hoaxes/${id}`);\r\n};\r\n\r\nexport const deleteUser = username => {\r\n  return axios.delete(`/api/1.0/users/${username}`);\r\n};\r\n","import * as ACTIONS from './Constants';\r\nimport { login, signup, logout } from '../api/apiCalls';\r\n\r\nexport const logoutSuccess = (props) => {\r\n  return async function (dispatch) {\r\n    try {\r\n      await logout();\r\n    } catch (err){\r\n\r\n    }\r\n    dispatch({\r\n      type: ACTIONS.LOGOUT_SUCCESS\r\n    })\r\n  }\r\n};\r\n\r\nexport const loginSuccess = authState => {\r\n  return {\r\n    type: ACTIONS.LOGIN_SUCCESS,\r\n    payload: authState\r\n  };\r\n};\r\n\r\nexport const updateSuccess = ({ displayName, image }) => {\r\n  return {\r\n    type: ACTIONS.UPDATE_SUCCESS,\r\n    payload: {\r\n      displayName,\r\n      image\r\n    }\r\n  };\r\n};\r\n\r\nexport const loginHandler = credentials => {\r\n  return async function(dispatch) {\r\n    const response = await login(credentials);\r\n    const authState = {\r\n      ...response.data.user,\r\n      password: credentials.password,\r\n      token: response.data.token\r\n    };\r\n    dispatch(loginSuccess(authState));\r\n    return response;\r\n  };\r\n};\r\n\r\nexport const signupHandler = user => {\r\n  return async function(dispatch) {\r\n    const response = await signup(user);\r\n    await dispatch(loginHandler(user));\r\n    return response;\r\n  };\r\n};\r\n","export const LOGOUT_SUCCESS = 'logout-success';\r\nexport const LOGIN_SUCCESS = 'login-success';\r\nexport const UPDATE_SUCCESS = 'update-success';\r\n","import React, { useState } from 'react';\r\nimport Input from '../components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signupHandler } from '../redux/authActions';\r\n\r\nconst UserSignupPage = (props) => {\r\n  const [form, setForm] = useState({\r\n    username: null,\r\n    displayName: null,\r\n    password: null,\r\n    passwordRepeat: null,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setErrors((previousErrors) => ({ ...previousErrors, [name]: undefined }));\r\n    setForm((previousForm) => ({ ...previousForm, [name]: value }));\r\n  };\r\n\r\n  const onClickSignup = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const { history } = props;\r\n    const { push } = history;\r\n\r\n    const { username, displayName, password } = form;\r\n\r\n    const body = {\r\n      username,\r\n      displayName,\r\n      password,\r\n    };\r\n\r\n    try {\r\n      await dispatch(signupHandler(body));\r\n      push(`/user/${username}`);\r\n    } catch (error) {\r\n      if (error.response.data.validationErrors) {\r\n        setErrors(error.response.data.validationErrors);\r\n      }\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const { username: usernameError, displayName: displayNameError, password: passwordError } = errors;\r\n  const pendingApiCallSignup = useApiProgress('post', '/api/1.0/users');\r\n  const pendingApiCallLogin = useApiProgress('post', '/api/1.0/auth');\r\n\r\n  const pendingApiCall = pendingApiCallSignup || pendingApiCallLogin;\r\n\r\n  let passwordRepeatError;\r\n  if (form.password !== form.passwordRepeat) {\r\n    passwordRepeatError = t('Password mismatch');\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-6\">\r\n          <form>\r\n            <h1 className=\"text-center\">{t(\"Sign Up\")}</h1>\r\n            <Input\r\n              name=\"username\"\r\n              label={t(\"Username\")}\r\n              error={usernameError}\r\n              onChange={onChange}\r\n            />\r\n            <Input\r\n              name=\"displayName\"\r\n              label={t(\"Display Name\")}\r\n              error={displayNameError}\r\n              onChange={onChange}\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label={t(\"Password\")}\r\n              error={passwordError}\r\n              onChange={onChange}\r\n              type=\"password\"\r\n            />\r\n            <Input\r\n              name=\"passwordRepeat\"\r\n              label={t(\"Password Repeat\")}\r\n              error={passwordRepeatError}\r\n              onChange={onChange}\r\n              type=\"password\"\r\n            />\r\n            <div className=\"text-center\">\r\n              <ButtonWithProgress\r\n                onClick={onClickSignup}\r\n                disabled={pendingApiCall || passwordRepeatError !== undefined}\r\n                pendingApiCall={pendingApiCall}\r\n                text={t(\"Sign Up\")}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserSignupPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Input from '../components/Input';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport { useDispatch } from 'react-redux';\r\nimport { loginHandler } from '../redux/authActions';\r\n\r\nconst LoginPage = props => {\r\n  const [username, setUsername] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setError(undefined);\r\n  }, [username, password]);\r\n\r\n  const onClickLogin = async event => {\r\n    event.preventDefault();\r\n    const creds = {\r\n      username,\r\n      password\r\n    };\r\n\r\n    const { history } = props;\r\n    const { push } = history;\r\n\r\n    setError(undefined);\r\n    try {\r\n      await dispatch(loginHandler(creds));\r\n      push(`/user/${username}`);\r\n    } catch (apiError) {\r\n      setError(apiError.response.data.message);\r\n    }\r\n  };\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const pendingApiCall = useApiProgress('post', '/api/1.0/auth');\r\n\r\n  const buttonEnabled = username && password;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-6 \">\r\n          <form action=\"../dashoard\">\r\n            <h1 className=\"text-center\">{t(\"Login\")}</h1>\r\n            <Input\r\n              label={t(\"Username\")}\r\n              onChange={(event) => setUsername(event.target.value)}\r\n            />\r\n            <Input\r\n              label={t(\"Password\")}\r\n              type=\"password\"\r\n              onChange={(event) => setPassword(event.target.value)}\r\n            />\r\n            {error && <div className=\"alert alert-danger\">İstifadəçi Adı və ya Şifrə yanlışdır!</div>}\r\n            <div className=\"text-center \">\r\n              <ButtonWithProgress\r\n                onClick={onClickLogin}\r\n                disabled={!buttonEnabled || pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={t(\"Login\")}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { changeLanguage } from '../api/apiCalls';\r\n\r\nconst LanguageSelector = props => {\r\n  const { i18n } = useTranslation();\r\n\r\n  const onChangeLanguage = language => {\r\n    i18n.changeLanguage(language);\r\n    changeLanguage(language);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <img\r\n        alt=\"Aze Flag\"\r\n        onClick={() => onChangeLanguage('aze')}\r\n        style={{ cursor: 'pointer' }}\r\n      ></img>\r\n      <img  alt=\"USA Flag\" onClick={() => onChangeLanguage('en')} style={{ cursor: 'pointer' }}></img>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n","import React from 'react';\r\nimport defaultPicture from '../assets/profile.png';\r\n\r\nconst ProfileImageWithDefault = props => {\r\n  const { image, tempimage } = props;\r\n\r\n  let imageSource = defaultPicture;\r\n  if (image) {\r\n    imageSource = 'images/profile/' + image;\r\n  }\r\n  return (\r\n    <img\r\n      alt={`Profile`}\r\n      src={tempimage || imageSource}\r\n      {...props}\r\n      onError={event => {\r\n        event.target.src = defaultPicture;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileImageWithDefault;\r\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\n\r\nconst Modal = props => {\r\n  const { visible, onClickCancel, message, onClickOk, pendingApiCall, title, okButton } = props;\r\n  const { t } = useTranslation();\r\n\r\n  let className = 'modal fade';\r\n  if (visible) {\r\n    className += ' show d-block';\r\n  }\r\n\r\n  return (\r\n    <div className={className} style={{ backgroundColor: '#000000b0' }}>\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">{title}</h5>\r\n          </div>\r\n          <div className=\"modal-body\">{message}</div>\r\n          <div className=\"modal-footer\">\r\n            <button className=\"btn btn-secondary\" disabled={pendingApiCall} onClick={onClickCancel}>\r\n              {t('Cancel')}\r\n            </button>\r\n            <ButtonWithProgress\r\n              className=\"btn btn-danger\"\r\n              onClick={onClickOk}\r\n              pendingApiCall={pendingApiCall}\r\n              disabled={pendingApiCall}\r\n              text={okButton}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Input from './Input';\r\nimport { updateUser, deleteUser } from '../api/apiCalls';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport { updateSuccess, logoutSuccess } from '../redux/authActions';\r\nimport Modal from './Modal';\r\n\r\nconst ProfileCard = props => {\r\n  const [inEditMode, setInEditMode] = useState(false);\r\n  const [updatedDisplayName, setUpdatedDisplayName] = useState();\r\n  const { username: loggedInUsername } = useSelector(store => ({ username: store.username }));\r\n  const routeParams = useParams();\r\n  const pathUsername = routeParams.username;\r\n  const [user, setUser] = useState({});\r\n  const [editable, setEditable] = useState(false);\r\n  const [newImage, setNewImage] = useState();\r\n  const [validationErrors, setValidationErrors] = useState({});\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setUser(props.user);\r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    setEditable(pathUsername === loggedInUsername);\r\n  }, [pathUsername, loggedInUsername]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors(previousValidationErrors => ({\r\n      ...previousValidationErrors,\r\n      displayName: undefined\r\n    }));\r\n  }, [updatedDisplayName]);\r\n\r\n  useEffect(() => {\r\n    setValidationErrors(previousValidationErrors => ({\r\n      ...previousValidationErrors,\r\n      image: undefined\r\n    }));\r\n  }, [newImage]);\r\n\r\n  const { username, displayName, image } = user;\r\n\r\n  const pendingApiCallDeleteUser = useApiProgress('delete', `/api/1.0/users/${username}`, true);\r\n\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    if (!inEditMode) {\r\n      setUpdatedDisplayName(undefined);\r\n      setNewImage(undefined);\r\n    } else {\r\n      setUpdatedDisplayName(displayName);\r\n    }\r\n  }, [inEditMode, displayName]);\r\n\r\n  const onClickSave = async () => {\r\n    let image;\r\n    if (newImage) {\r\n      image = newImage.split(',')[1];\r\n    }\r\n\r\n    const body = {\r\n      displayName: updatedDisplayName,\r\n      image\r\n    };\r\n    try {\r\n      const response = await updateUser(username, body);\r\n      setInEditMode(false);\r\n      setUser(response.data);\r\n      dispatch(updateSuccess(response.data));\r\n    } catch (error) {\r\n      setValidationErrors(error.response.data.validationErrors);\r\n    }\r\n  };\r\n\r\n  const onChangeFile = event => {\r\n    if (event.target.files.length < 1) {\r\n      return;\r\n    }\r\n    const file = event.target.files[0];\r\n    const fileReader = new FileReader();\r\n    fileReader.onloadend = () => {\r\n      setNewImage(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  };\r\n\r\n  const onClickCancel = () => {\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const onClickDeleteUser = async () => {\r\n    await deleteUser(username);\r\n    setModalVisible(false);\r\n    dispatch(logoutSuccess());\r\n    history.push('/');\r\n  };\r\n  const pendingApiCall = useApiProgress('put', '/api/1.0/users/' + username);\r\n\r\n  const { displayName: displayNameError, image: imageError } = validationErrors;\r\n\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <div className=\"card-header\">\r\n        <ProfileImageWithDefault\r\n          className=\"rounded-circle shadow\"\r\n          width=\"200\"\r\n          height=\"200\"\r\n          alt={`${username} profile`}\r\n          image={image}\r\n          tempimage={newImage}\r\n        />\r\n      </div>\r\n      <div className=\"card-body\">\r\n        {!inEditMode && (\r\n          <>\r\n            <h3>\r\n              {displayName}@{username}\r\n            </h3>\r\n            {editable && (\r\n              <>\r\n                <button className=\"btn btn-success d-inline-flex\" onClick={() => setInEditMode(true)}>\r\n                  <i className=\"material-icons\">edit</i>\r\n                  {t('Edit')}\r\n                </button>\r\n                <div className=\"pt-2\">\r\n                  {/* <button className=\"btn btn-danger d-inline-flex\" onClick={() => setModalVisible(true)}>\r\n                    <i className=\"material-icons\">directions_run</i>\r\n                    {t('Delete My Account')}\r\n                  </button> */}\r\n                </div>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n        {inEditMode && (\r\n          <div>\r\n            <Input\r\n              label={t('Change Display Name')}\r\n              defaultValue={displayName}\r\n              onChange={event => {\r\n                setUpdatedDisplayName(event.target.value);\r\n              }}\r\n              error={displayNameError}\r\n            />\r\n            <Input type=\"file\" onChange={onChangeFile} error={imageError} />\r\n            <div>\r\n              <ButtonWithProgress\r\n                className=\"btn btn-primary d-inline-flex\"\r\n                onClick={onClickSave}\r\n                disabled={pendingApiCall}\r\n                pendingApiCall={pendingApiCall}\r\n                text={\r\n                  <>\r\n                    <i className=\"material-icons\">save</i>\r\n                    {t('Save')}\r\n                  </>\r\n                }\r\n              />\r\n              <button className=\"btn btn-light d-inline-flex ml-1\" onClick={() => setInEditMode(false)} disabled={pendingApiCall}>\r\n                <i className=\"material-icons\">close</i>\r\n                {t('Cancel')}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        visible={modalVisible}\r\n        title={t('Delete My Account')}\r\n        okButton={t('Delete My Account')}\r\n        onClickCancel={onClickCancel}\r\n        onClickOk={onClickDeleteUser}\r\n        message={t('Are you sure to delete your account?')}\r\n        pendingApiCall={pendingApiCallDeleteUser}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <div className=\"spinner-border text-black-50\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProfileCard from '../components/ProfileCard';\r\nimport { getUser } from '../api/apiCalls';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport Spinner from '../components/Spinner';\r\nimport HoaxFeed from '../components/HoaxFeed';\r\n\r\nconst UserPage = () => {\r\n  const [user, setUser] = useState({});\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  const { username } = useParams();\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const pendingApiCall = useApiProgress('get', '/api/1.0/users/' + username, true);\r\n\r\n  useEffect(() => {\r\n    setNotFound(false);\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        const response = await getUser(username);\r\n        setUser(response.data);\r\n      } catch (error) {\r\n        setNotFound(true);\r\n      }\r\n    };\r\n    loadUser();\r\n  }, [username]);\r\n\r\n  if (notFound) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"alert alert-danger text-center\">\r\n          <div>\r\n            <i className=\"material-icons\" style={{ fontSize: '48px' }}>\r\n              error\r\n            </i>\r\n          </div>\r\n          {t('User not found')}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (pendingApiCall || user.username !== username) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <ProfileCard user={user} />\r\n        </div>\r\n        <div className=\"col\">\r\n          {/* <HoaxFeed /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport logo from '../assets/hoaxify.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutSuccess } from '../redux/authActions';\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\n\r\nconst TopBar = props => {\r\n  const { t } = useTranslation();\r\n\r\n  const { username, isLoggedIn, displayName, image } = useSelector(store => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n    username: store.username,\r\n    displayName: store.displayName,\r\n    image: store.image\r\n  }));\r\n\r\n  const menuArea = useRef(null);\r\n\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', menuClickTracker);\r\n    return () => {\r\n      document.removeEventListener('click', menuClickTracker);\r\n    };\r\n  }, [isLoggedIn]);\r\n\r\n  const menuClickTracker = event => {\r\n    if (menuArea.current === null || !menuArea.current.contains(event.target)) {\r\n      setMenuVisible(false);\r\n    }\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogoutSuccess = () => {\r\n    dispatch(logoutSuccess());\r\n  };\r\n\r\n  let links = (\r\n    <ul className=\"navbar-nav ml-auto\">\r\n      <li>\r\n        <Link className=\"nav-link\" to=\"/login\">\r\n          {t('Login')}\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link className=\"nav-link\" to=\"/signup\">\r\n          {t('Sign Up')}\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  );\r\n  if (isLoggedIn) {\r\n    let dropDownClass = 'dropdown-menu p-0 shadow';\r\n    if (menuVisible) {\r\n      dropDownClass += ' show';\r\n    }\r\n\r\n    links = (\r\n      <ul className=\"navbar-nav ml-auto\" ref={menuArea}>\r\n        <li className=\"nav-item dropdown\">\r\n          <div className=\"d-flex\" style={{ cursor: 'pointer' }} onClick={() => setMenuVisible(true)}>\r\n            <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" className=\"rounded-circle m-auto\" />\r\n            <span className=\"nav-link dropdown-toggle\">{displayName}</span>\r\n          </div>\r\n          <div className={dropDownClass}>\r\n            <Link className=\"dropdown-item d-flex p-2\" to={`/user/${username}`} onClick={() => setMenuVisible(false)}>\r\n              <i className=\"material-icons text-info mr-2\">person</i>\r\n              {t('My Profile')}\r\n            </Link>\r\n            <span className=\"dropdown-item  d-flex p-2\" onClick={onLogoutSuccess} style={{ cursor: 'pointer' }}>\r\n              <i className=\"material-icons text-danger mr-2\">power_settings_new</i>\r\n              {t('Logout')}\r\n            </span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"shadow-sm bg-light mb-2\">\r\n      <nav className=\"navbar navbar-light container navbar-expand\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {t(\"Teacher Portal\")}\r\n        </Link>\r\n        {links}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React from \"react\";\r\nimport UserSignupPage from \"../pages/UserSignupPage\";\r\nimport LoginPage from \"../pages/LoginPage\";\r\nimport LanguageSelector from \"../components/LanguageSelector\";\r\nimport UserPage from \"../pages/UserPage\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport TopBar from \"../components/TopBar\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst App = () => {\r\n  const { isLoggedIn } = useSelector((store) => ({\r\n    isLoggedIn: store.isLoggedIn,\r\n  }));\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <TopBar />\r\n        <Switch>\r\n          {!isLoggedIn && <Route path=\"/login\" component={LoginPage} />}\r\n          {!isLoggedIn && <Route path=\"/signup\" component={UserSignupPage} />}\r\n          {isLoggedIn ? (\r\n            // <Route path=\"/\" component={HomePage} />\r\n            <Route path=\"/user/:username\" component={UserPage} />\r\n          ) : (\r\n            <Route path=\"/\" component={LoginPage} />\r\n          )}\r\n          {!isLoggedIn && <Route path=\"/user/:username\" component={UserPage} />}\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n      <LanguageSelector />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as ACTIONS from './Constants';\r\n\r\nconst defaultState = {\r\n  isLoggedIn: false,\r\n  username: undefined,\r\n  displayName: undefined,\r\n  image: undefined,\r\n  password: undefined\r\n};\r\n\r\nconst authReducer = (state = { ...defaultState }, action) => {\r\n  if (action.type === ACTIONS.LOGOUT_SUCCESS) {\r\n    return defaultState;\r\n  } else if (action.type === ACTIONS.LOGIN_SUCCESS) {\r\n    return {\r\n      ...action.payload,\r\n      isLoggedIn: true\r\n    };\r\n  } else if (action.type === ACTIONS.UPDATE_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      ...action.payload\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default authReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\nconst secureLs = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n  const hoaxAuth = secureLs.get('hoax-auth');\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined\r\n  };\r\n\r\n  if (hoaxAuth) {\r\n    return hoaxAuth;\r\n  }\r\n  return stateInLocalStorage;\r\n};\r\n\r\nconst updateStateInStorage = newState => {\r\n  secureLs.set('hoax-auth', newState);\r\n};\r\n\r\nconst configureStore = () => {\r\n  const initialState = getStateFromStorage();\r\n  setAuthorizationHeader(initialState);\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(authReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\r\n\r\n  store.subscribe(() => {\r\n    updateStateInStorage(store.getState());\r\n    setAuthorizationHeader(store.getState());\r\n  });\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './bootstrap-override.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './i18n';\r\nimport App from './container/App';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/configureStore';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}